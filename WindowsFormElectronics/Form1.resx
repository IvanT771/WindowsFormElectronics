<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>